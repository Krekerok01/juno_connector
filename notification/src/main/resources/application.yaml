spring:
  application:
    name: notification-service
  kafka:
    consumer:
      bootstrap-servers: ${BOOTSTRAP_SERVERS}
      auto-offset-reset: earliest
      group-id: ${GROUP_ID}
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.krekerok.notification.dto.message.BaseMessage
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    topics:
      user:
        registration: registration
  mail:
    host: "smtp.gmail.com"
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true

server:
  port: 0

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL}
  instance:
    instance-id: ${spring.application.name}:${random.uuid}



